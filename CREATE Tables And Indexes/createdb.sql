CREATE TABLE BUSINESS(
    BUSINESS_ID  VARCHAR2(100)         PRIMARY KEY,
    FULL_ADDRESS VARCHAR2(300)         NOT NULL,
    OPEN         VARCHAR2(5),
    CITY         VARCHAR2(30)          NOT NULL,
    REVIEW_COUNT NUMBER(5),
    BUSINESS_NAME  VARCHAR2(300)         NOT NULL,
    LONGITUDE    NUMBER               NOT NULL,
    STATE        VARCHAR2(50)          NOT NULL,
    STARS        NUMBER,
    LATITUDE     NUMBER               NOT NULL,
    TYPE         VARCHAR2(25),
    ATRRIBUTES   VARCHAR2(4000)
);


CREATE TABLE BUSINESS_HOURS(
    BUSINESS_ID VARCHAR2(50),
    BUSINESS_DAY VARCHAR2(25),
    BUSINESS_OPEN_TIME TIMESTAMP (6),
    BUSINESS_CLOSE_TIME TIMESTAMP (6),
    PRIMARY KEY (BUSINESS_ID , BUSINESS_DAY),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID)
);

CREATE TABLE BUSINESSCATEGORY(
    BID VARCHAR2(50), 
    BUSNCATGNAME VARCHAR2(50), 
    BUSNSUBCAT VARCHAR2(50)
);


CREATE TABLE BUSNATTR(
    BID VARCHAR2(50), 
    ATTRJSON VARCHAR2(3000)
);

CREATE TABLE NEIGHBOURHOOD(
    BUSINESS_ID VARCHAR2(50),
    NEIGHBOUR_NAME VARCHAR2(3000),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID)
);

CREATE TABLE YELP_USERS(
    YELPING_SINCE TIMESTAMP,
    REVIEW_COUNT NUMBER,
    USER_NAME VARCHAR2(50),
    USER_ID VARCHAR2(50) PRIMARY KEY,
    FANS NUMBER,
    AVERAGE_STARS NUMBER,
    USER_TYPE VARCHAR2(25)
);

CREATE TABLE VOTES_USER(
    USER_ID VARCHAR2(50),
    FUNNY NUMBER,
    USEFUL NUMBER,
    COOL NUMBER
);

CREATE TABLE REVIEWS(
    USER_ID VARCHAR2(50),
    REVIEW_ID VARCHAR2(50) PRIMARY KEY,
    STARS NUMBER,
    DATEE DATE,
    TEXT CLOB,
    TYPE VARCHAR2(2000),
    BUSINESS_ID VARCHAR2(50)
);

CREATE TABLE VOTES_REVIEW(
    FUNNY NUMBER,
    USEFUL NUMBER,
    COOL NUMBER,
    USER_ID VARCHAR2(50),
    REVIEW_ID  VARCHAR2(50),
    BUSINESS_ID VARCHAR2(50)
);

CREATE TABLE FRIENDS(
    USER_ID VARCHAR2(50),
    FRIENDS_ID VARCHAR2(50)
);

CREATE TABLE COMPLIMENTS(
    USER_ID VARCHAR2(50),
    COMPLIMENT_TYPE VARCHAR2(50),
    COMPLEMENT_VALUE VARCHAR2(50),
    FOREIGN KEY (USER_ID) REFERENCES YELP_USERS(USER_ID)
);


CREATE TABLE ELITE(
    USER_ID VARCHAR2(50),
    YEARS_ELITE VARCHAR2(300),
    FOREIGN KEY (USER_ID) REFERENCES YELP_USERS(USER_ID)
);

CREATE TABLE CHECKIN(
    BUSINESS_ID VARCHAR2(50),
    TYPE VARCHAR2(25),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID)
);

CREATE TABLE CHECKIN_INFO(
    BUSINESS_ID VARCHAR(250) NOT NULL,
    TIMESLOT VARCHAR2(50),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID)
);


-- create index for MainCategory table
CREATE INDEX MAINCATEGORY_IN ON BUSINESSCATEGORY (BUSNCATGNAME);
-- create index for SubCategory table
CREATE INDEX SUBCATEGORY_IN ON BUSINESSCATEGORY (BUSNSUBCAT);
-- create index for Attribute table
CREATE INDEX ATTRIBUTE_IN ON BUSNATTR (ATTRJSON);
-- create index for YelpUser table
CREATE INDEX MEMBERSINCE ON YELP_USERS (yelping_since);
CREATE INDEX UNAME ON YELP_USERS (USER_NAME);
CREATE INDEX REVIEWCOUNT ON YELP_USERS (review_count);
CREATE INDEX INDEX_USER_STAR ON YELP_USERS (average_stars);
-- create index for review table
CREATE INDEX UID_IN ON REVIEWS (USER_ID);
CREATE INDEX REVIEW_DATE ON REVIEWS (DATEE);
CREATE INDEX REVIEW_STAR ON REVIEWS (STARS);
CREATE INDEX REVIEW_BID ON REVIEWS (BUSINESS_ID);
--create index for business table
CREATE INDEX BNAME ON BUSINESS (BUSINESS_NAME);
CREATE INDEX BCITY ON BUSINESS (CITY);
CREATE INDEX BSTAR ON BUSINESS (STARS);
CREATE INDEX BSTATE ON BUSINESS (STATE);
--create index for friends table
CREATE INDEX Friends_IN ON FRIENDS (USER_ID, FRIENDS_ID);

