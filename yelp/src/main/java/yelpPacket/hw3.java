/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package yelpPacket;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tom
 */
public class hw3 extends javax.swing.JFrame {
    String line = null;
    static Connection con = null;
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    ArrayList<String> mainCate = new ArrayList();
    ArrayList<String> subCate = new ArrayList();
    ArrayList<String> attr = new ArrayList();
    String Bus = "SELECT BUSINESS_ID, City, State, Stars FROM BUSINESS";
    int bu = 0;
    /** Creates new form hw3 */
    public hw3() {
        initComponents();
        checkListener();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jButton5 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jComboBox17 = new javax.swing.JComboBox<>();
        jTextField10 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jComboBox18 = new javax.swing.JComboBox<>();
        jTextField11 = new javax.swing.JTextField();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker3 = new org.jdesktop.swingx.JXDatePicker();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrame1.setTitle("Detail");
        jFrame1.setMinimumSize(new java.awt.Dimension(780, 630));
        jFrame1.setPreferredSize(new java.awt.Dimension(800, 600));
        jFrame1.setResizable(false);

        jButton5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Review Date", "Stars", "Text", "Name", "Useful", "Cool", "Funny"
            }
        ));
        jScrollPane6.setViewportView(jTable2);

        org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jFrame1Layout.createSequentialGroup()
                .addContainerGap(630, Short.MAX_VALUE)
                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jFrame1Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 730, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jFrame1Layout.createSequentialGroup()
                .add(0, 513, Short.MAX_VALUE)
                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jFrame1Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 486, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(70, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Yelp Database");
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jPanel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox1.setText("Active Life");

        jCheckBox2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox2.setText("Arts & Entertainment");

        jCheckBox3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox3.setText("Automotive");

        jCheckBox4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox4.setText("Car Rental");

        jCheckBox20.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox20.setText("Hotels & Travel");

        jCheckBox21.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox21.setText("Hardware Stores");

        jCheckBox22.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox22.setText("Grocery");

        jCheckBox23.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox23.setText("Medical Centers");

        jCheckBox24.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox24.setText("Nurseries & Gardening");

        jCheckBox25.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox25.setText("Nightlife");

        jCheckBox5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox5.setText("Cafes");

        jCheckBox26.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox26.setText("Restaurants");

        jCheckBox27.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox27.setText("Shopping");

        jCheckBox6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox6.setText("Beauty & Spas");

        jCheckBox28.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox28.setText("Transportation");

        jCheckBox7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox7.setText("Convenience Stores");

        jCheckBox8.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox8.setText("Dentists");

        jCheckBox9.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox9.setText("Doctors");

        jCheckBox10.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox10.setText("Drugstores");

        jCheckBox11.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox11.setText("Department Stores");

        jCheckBox12.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox12.setText("Education");

        jCheckBox13.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox13.setText("Event Planning & Services");

        jCheckBox14.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox14.setText("Flowers & Gifts");

        jCheckBox15.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox15.setText("Food");

        jCheckBox16.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox16.setText("Health & Medical");

        jCheckBox17.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox17.setText("Home Services");

        jCheckBox18.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox18.setText("Home & Garden");

        jCheckBox19.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jCheckBox19.setText("Hospitals");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(9, 9, 9)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jCheckBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jCheckBox14)
                    .add(jCheckBox10)
                    .add(jCheckBox3)
                    .add(jCheckBox6)
                    .add(jCheckBox5)
                    .add(jCheckBox7)
                    .add(jCheckBox8)
                    .add(jCheckBox9)
                    .add(jCheckBox11)
                    .add(jCheckBox12)
                    .add(jCheckBox13)
                    .add(jCheckBox2)
                    .add(jCheckBox1)
                    .add(jCheckBox15)
                    .add(jCheckBox16)
                    .add(jCheckBox17)
                    .add(jCheckBox18)
                    .add(jCheckBox19)
                    .add(jCheckBox20)
                    .add(jCheckBox21)
                    .add(jCheckBox22)
                    .add(jCheckBox23)
                    .add(jCheckBox24)
                    .add(jCheckBox25)
                    .add(jCheckBox26)
                    .add(jCheckBox27)
                    .add(jCheckBox28))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox9)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox12)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox14)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox17)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox18)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox19)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox20)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox21)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox22)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox23)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox24)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox25)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox26)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox27)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox28))
        );

        jScrollPane1.setViewportView(jPanel3);

        jScrollPane2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jPanel5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 240, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 417, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel5);

        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jPanel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 284, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 417, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPanel6);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Business Queries Analysis");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel2.setText("Search for:");

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR" }));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setText("Member Since");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel4.setText("Review Count");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel5.setText("Number of Friends");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel6.setText("Average Stars");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setText("Number of Votes");

        jComboBox3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<" }));

        jComboBox4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<" }));

        jComboBox5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<" }));

        jComboBox6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<" }));

        jComboBox7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR" }));

        jTextField1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jTextField3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jTextField4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jXDatePicker1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("User Queries Analysis Bar");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel12.setText("Search for:");

        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jComboBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel5)
                                .add(18, 18, 18)
                                .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel4)
                                    .add(jLabel3))
                                .add(39, 39, 39)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jXDatePicker1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(39, 39, 39)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                            .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jXDatePicker1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(18, 18, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4)
                        .add(2, 2, 2)))
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(19, 19, 19)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(jComboBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(61, 61, 61))
        );

        jScrollPane5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Business", "City", "State", "Stars"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel21.setBackground(new java.awt.Color(51, 51, 51));
        jLabel21.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Review");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel22.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("From:");

        jLabel23.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("To:");

        jLabel24.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel24.setText("Star:");

        jLabel25.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel25.setText("Value:");

        jComboBox17.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<" }));

        jTextField10.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel26.setText("Votes:");

        jLabel27.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel27.setText("Value:");

        jComboBox18.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jComboBox18.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">", "<" }));

        jTextField11.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jXDatePicker2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jXDatePicker3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel21, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel4Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel24)
                            .add(jLabel25))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jComboBox17, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jTextField10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)))
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jButton3)
                        .add(jPanel4Layout.createSequentialGroup()
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(jLabel27)
                                .add(jLabel26))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jComboBox18, 0, 46, Short.MAX_VALUE)
                                .add(jTextField11)))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel23))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jXDatePicker3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .add(jXDatePicker2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXDatePicker2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jXDatePicker3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(23, 23, 23)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel24)
                    .add(jComboBox17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel25)
                    .add(jTextField10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel26)
                    .add(jComboBox18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel27)
                    .add(jTextField11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton3)
                .add(52, 52, 52))
        );

        jButton2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton2.setText("Execute Query");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton1.setText("Execute User Query");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Category");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Sub-Category");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Attributes");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Result");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 1284, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 191, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel9))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel10)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 234, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jLabel11)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel13)
                        .add(276, 276, 276))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(436, 436, 436)
                                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(24, 24, 24)
                                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(75, 75, 75)
                                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 208, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(116, 116, 116)
                                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 204, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jScrollPane5))
                                    .add(jScrollPane4))
                                .addContainerGap())))))
            .add(jPanel1Layout.createSequentialGroup()
                .add(117, 117, 117)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 371, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel11)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(39, 39, 39)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(jLabel10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jScrollPane2)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel13)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(14, 14, 14)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 257, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 197, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton2)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DB Search", jPanel1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            //empty table
            DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < dm.getRowCount(); i++) {
                for (int j = 0; j < dm.getColumnCount(); j++) {
                    dm.setValueAt("", i, j);
                }
            }
            bu = 1;
            displayBusData(evt);
        } catch (SQLException | ClassNotFoundException | ParseException ex) {
            Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            //empty table
            DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < dm.getRowCount(); i++) {
                for (int j = 0; j < dm.getColumnCount(); j++) {
                    dm.setValueAt("", i, j);
                }
            }
            bu = 2;
            jTextArea1.setText("");
            displayUserData(evt);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextField10.setText("");
        jTextField11.setText("");
        jXDatePicker2.setDate(null);
        jXDatePicker3.setDate(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jXDatePicker1.setDate(null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jFrame1.dispose();
        DefaultTableModel dm = (DefaultTableModel) jTable2.getModel();
        for (int i = 0; i < dm.getRowCount(); i++) {
            for (int j = 0; j < dm.getColumnCount(); j++) {
                dm.setValueAt("", i, j);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {                                     
            DBConnect db = new DBConnect();
            try {
                con = db.openConnection();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(bu == 1){
                int row_counter = 0;
                String bid = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
                String re = "SELECT r.DATEE Review_Date, r.STARS Stars, r.TEXT Text, u.user_name Name, v.useful Useful, v.cool Cool, v.funny Funny\n" +
                        "From reviews r, (select sum(useful) + sum(funny) + sum(cool) as total, user_id from votes_review group by user_id) vr, yelp_users u, votes_review v\n" +
                        "where r.user_id = vr.user_id And r.user_id = u.user_id AND v.user_id = r.user_id\n" +
                        "AND r.business_id = '" + bid + "'\n";
                String from = "";
                String to = "";
                String starNum = null;
                String voteNum = null;
                String starRange = jComboBox17.getSelectedItem().toString();
                String voteRange = jComboBox18.getSelectedItem().toString();
                if(jXDatePicker2.getDate() == null){
                    from = "";
                }else{
                    from = "AND to_char(r.DATEE,'yyyy-mm-dd') >= '" + format.format(jXDatePicker2.getDate()) + "' \n";
                }

                if(jXDatePicker3.getDate() == null){
                    to = "";
                } else {
                    to = "AND to_char(r.DATEE,'yyyy-mm-dd') <= '" + format.format(jXDatePicker3.getDate()) + "' \n";
                }

                if(jTextField10.getText().isEmpty()){
                    starNum = "";
                } else {
                    starNum = "AND r.stars " + starRange + " "+ jTextField10.getText() + "\n";
                }

                if(jTextField11.getText().isEmpty()){
                    voteNum = "";
                } else {
                    voteNum = "AND vr.total " + voteRange + " "+ jTextField11.getText() + "\n";
                }
                re += from + to + starNum + voteNum;
                System.out.println(re);

                PreparedStatement stmt = con.prepareStatement(re);
                ResultSet rs = stmt.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = new DefaultTableModel();
                Vector<String> cols = new Vector();
                for(int i = 0; i < rsmd.getColumnCount(); i++){
                    cols.add(rsmd.getColumnName(i + 1));
                }
                model.setColumnIdentifiers(cols);
                String[] row=new String[rsmd.getColumnCount()];
                while (rs.next()) {
                    for (int i = 0; i < rsmd.getColumnCount(); i++) {
                        row[i]=rs.getString(i+1);
                    }
                    row_counter++;
                    model.addRow(row);
                }
                System.out.println("Row counter = " + row_counter);
                jTable2.setModel(model);
                stmt.close();
                jFrame1.setVisible(true);
            }
            else if(bu == 2){
                int row_counter = 0;
                String uid = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
                String reu = "SELECT r.DATEE Review_Date, r.STARS Stars, r.TEXT Text, b.business_name Business_name, v.useful Useful, v.cool Cool, v.funny Funny\n" +
                             "FROM reviews r, (select sum(useful) + sum(funny) + sum(cool) as total, user_id from votes_review group by user_id) vr, yelp_users u, votes_review v, business b\n" +
                             "WHERE r.user_id = vr.user_id And r.user_id = u.user_id AND v.user_id = r.user_id AND r.business_id = b.BUSINESS_ID\n" +
                             "AND u.USER_ID = '" + uid + "'\n";
                String from = "";
                String to = "";
                String starNum = null;
                String voteNum = null;
                String starRange = jComboBox17.getSelectedItem().toString();
                String voteRange = jComboBox18.getSelectedItem().toString();
                if(jXDatePicker2.getDate() == null){
                    from = "";
                }else{
                    from = "AND to_char(r.DATEE,'yyyy-mm-dd') >= '" + format.format(jXDatePicker2.getDate()) + "' \n";
                }

                if(jXDatePicker3.getDate() == null){
                    to = "";
                } else {
                    to = "AND to_char(r.DATEE,'yyyy-mm-dd') <= '" + format.format(jXDatePicker3.getDate()) + "' \n";
                }

                if(jTextField10.getText().isEmpty()){
                    starNum = "";
                } else {
                    starNum = "AND r.stars " + starRange + " "+ jTextField10.getText() + "\n";
                }

                if(jTextField11.getText().isEmpty()){
                    voteNum = "";
                } else {
                    voteNum = "AND vr.total " + voteRange + " "+ jTextField11.getText() + "\n";
                }
                reu += from + to + starNum + voteNum;
                System.out.println(reu);
                PreparedStatement stmt = con.prepareStatement(reu);
                ResultSet rs = stmt.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = new DefaultTableModel();
                Vector<String> cols = new Vector();
                for(int i = 0; i < rsmd.getColumnCount(); i++){
                    cols.add(rsmd.getColumnName(i + 1));
                }
                model.setColumnIdentifiers(cols);
                String[] row=new String[rsmd.getColumnCount()];
                while (rs.next()) {
                    for (int i = 0; i < rsmd.getColumnCount(); i++) {
                        row[i]=rs.getString(i+1);
                    }
                    row_counter++;
                    model.addRow(row);
                }
                jTable2.setModel(model);
                stmt.close();
                System.out.println("Row counter = " + row_counter);
                jFrame1.setVisible(true); 
            } else {
                jFrame1.setVisible(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void displayBusData(java.awt.event.ActionEvent evt) throws SQLException, ClassNotFoundException, ParseException {
        DBConnect db = new DBConnect();
        con = db.openConnection();
        int row_counter = 0;
        System.out.println("Display Area:\n\n"+ Bus);
        jTextArea1.setText(Bus);
        PreparedStatement stmt = con.prepareStatement(Bus);
        ResultSet rs = stmt.executeQuery();
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model = new DefaultTableModel();
        Vector<String> cols = new Vector();
        for(int i = 0; i < rsmd.getColumnCount(); i++){
            cols.add(rsmd.getColumnName(i + 1));
        }
        model.setColumnIdentifiers(cols);
        String[] row=new String[rsmd.getColumnCount()];
        while (rs.next()) {
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                row[i]=rs.getString(i+1);
            }
            row_counter++;
            model.addRow(row);
        }
        jTable1.setModel(model);
        System.out.println("Row counter = " + row_counter);
        stmt.close();
    }
    
    private void displayUserData(java.awt.event.ActionEvent evt) throws SQLException, ClassNotFoundException{
        DBConnect db = new DBConnect();
        con = db.openConnection();
        int row_counter = 0;
        String uar = jComboBox7.getSelectedItem().toString();
        String user = "SELECT u.USER_ID ID, u.User_name Name, u.Yelping_Since, u.Average_stars Avg_Stars \n" +
                      "FROM Yelp_users u, (SELECT sum(useful) + sum(funny) + sum(cool) as total, user_id FROM VOTES_USER Group By user_id) uv, (SELECT count(friends_id) numF, User_id FROM Friends Group By user_id) f\n" +
                      "WHERE u.user_id = uv.user_id AND u.user_id = f.user_id\n";
        String since = "";
        String rcount = null;
        String numF = null;
        String avgStars = null;
        String voteTotal = null;
        String rcRange = jComboBox3.getSelectedItem().toString();
        String fRange = jComboBox4.getSelectedItem().toString();
        String aRange = jComboBox5.getSelectedItem().toString();
        String voteRange = jComboBox6.getSelectedItem().toString();
                
        if(jXDatePicker1.getDate() == null){
            since = "";
        }else{
            since = uar +" to_char(u.yelping_since,'yyyy-mm-dd') >= '" + format.format(jXDatePicker1.getDate()) + "' \n";
        }
        
        if(jTextField1.getText().isEmpty()){
            rcount = "";
        } else {
            rcount = uar + " u.review_count " + rcRange + " "+ jTextField1.getText() + "\n";
        }

        if(jTextField2.getText().isEmpty()){
            numF = "";
        } else {
            numF = uar + " f.numF " + fRange + " "+ jTextField2.getText() + "\n";
        }
        
        if(jTextField3.getText().isEmpty()){
            avgStars = "";
        } else {
            avgStars = uar + " u.average_stars " + aRange + " "+ jTextField3.getText() + "\n";
        }

        if(jTextField4.getText().isEmpty()){
            voteTotal = "";
        } else {
            voteTotal = uar + " uv.total " + voteRange + " "+ jTextField4.getText() + "\n";
        }
        
        user += since + rcount + numF + avgStars + voteTotal; 
        System.out.println("Display User Data:\n\n"+ user);
        jTextArea1.setText(user);
        PreparedStatement stmt = con.prepareStatement(user);
        ResultSet rs = stmt.executeQuery();
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model = new DefaultTableModel();
        Vector<String> cols = new Vector();
        for(int i = 0; i < rsmd.getColumnCount(); i++){
            cols.add(rsmd.getColumnName(i + 1));
        }
        model.setColumnIdentifiers(cols);
        String[] row=new String[rsmd.getColumnCount()];
        while (rs.next()) {
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                row[i]=rs.getString(i+1);
            }
            row_counter++;
            model.addRow(row);
        }
        System.out.println("Row counter = " + row_counter);
        jTable1.setModel(model);
        stmt.close();
    }
    
    private void checkListener(){
        Component[] a = jPanel3.getComponents();
        DBConnect db = new DBConnect();
        try {
            con = db.openConnection();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Getting mainCat componenets
        for (Component as: a){
            if (as.getClass().equals(javax.swing.JCheckBox.class)) {
                JCheckBox jcb = (JCheckBox) as;
                jcb.addActionListener(new ActionListener() 
                {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (jcb.isSelected()) {
                            try {
                                jPanel5.removeAll();
                                jPanel5.repaint();
                                jPanel5.revalidate();
                                jPanel6.removeAll();
                                jPanel6.repaint();
                                jPanel6.revalidate();
                                mainCate.add(jcb.getText());
                                String ar = jComboBox1.getSelectedItem().toString();
                                if ("AND".equals(ar)){
                                    ar = "Intersect";
                                }else {
                                    ar = "Union";
                                }
                                String cats = "SELECT DISTINCT BUSINESS_ID, City, State, Stars FROM BUSINESS WHERE BUSINESS_ID in (\n";
                                String cat = "";
                                String catid = "\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                cat = cat + "SELECT DISTINCT BUSNSUBCAT FROM BUSINESSCATEGORY WHERE ";
                                for (int i = 0; i < mainCate.size(); i++) {
                                    if (i == mainCate.size() - 1) {
                                        cat = cat + "BUSNCATGNAME = '" + mainCate.get(i) + "'";
                                        catid = catid + "BUSNCATGNAME = '" + mainCate.get(i) + "')"; 
                                    } else {
                                        cat = cat + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n"+ ar + "\n" + "SELECT DISTINCT BUSNSUBCAT FROM BUSINESSCATEGORY WHERE ";
                                        catid = catid + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                    }
                                }
                                cats = cats + catid; 
                                Bus = "";
                                Bus += cats;
                                System.out.println(cat);
                                jPanel5.removeAll();
                                jPanel5.repaint();
                                jPanel5.revalidate();
                                PreparedStatement ps = con.prepareStatement(cat);
                                ResultSet res = ps.executeQuery();
                                subCats = new ArrayList();
                                while (res.next()) {
                                    String result = res.getString(1);
                                    JCheckBox newChBox = new JCheckBox();
                                    newChBox.setText(result);
                                    subCats.add(newChBox);
                                }
                                jPanel5.setLayout(new GridLayout(0, 1, 0, 3));
                                for (JCheckBox ch : subCats) {
                                    jPanel5.add(ch);
                                    jPanel5.revalidate();
                                    jPanel5.repaint();
                                }
                                //Getting SubCat Components
                                Component[] b = jPanel5.getComponents();
                                for (Component bs: b){
                                    if (bs.getClass().equals(javax.swing.JCheckBox.class)) {
                                        JCheckBox jcb = (JCheckBox) bs;
                                        jcb.addActionListener(new ActionListener() {
                                            @Override
                                            public void actionPerformed(ActionEvent e) {
                                                if (jcb.isSelected()) {
                                                    try {
                                                        jPanel6.removeAll(); 
                                                        jPanel6.repaint();
                                                        jPanel6.revalidate();
                                                        subCate.add(jcb.getText());
                                                        String ar = jComboBox1.getSelectedItem().toString();
                                                        if ("AND".equals(ar)){
                                                            ar = "Intersect";
                                                        }else {
                                                            ar = "Union";
                                                        }
                                                        String cats = "SELECT DISTINCT BUSINESS_ID, City, State, Stars FROM BUSINESS WHERE BUSINESS_ID in (\n";
                                                        String scatid = "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                    + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                        String temp2 = "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                    + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                        
                                                        
                                                        String scat = "SELECT DISTINCT ATTRJSON FROM BUSNATTR WHERE BID in (\n";
                                                        scat = scat + "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                    + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                        String temp = "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                    + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                        for (int i = 0; i < mainCate.size(); i++) {
                                                            if (i == mainCate.size() - 1) {
                                                                scat = scat + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                scatid = scatid + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                temp2 = temp2 + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                            } else {
                                                                scat = scat + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                                scatid = scatid + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                temp2 = temp2 + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                            } 
                                                        }
                                                        for (int j = 0; j < subCate.size(); j++){
                                                            if (j == subCate.size() - 1) {
                                                                scat = scat + "\t\t\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "')\n";
                                                                scatid = scatid + "\t\t\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "')\n";
                                                            }else {
                                                                scatid = scatid + "\t\t\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "'\n\t\t\t\t\t\t"+ ar + "\n"+ temp2; 
                                                            }
                                                        }
                                                        cats += scatid;
                                                        Bus ="";
                                                        Bus += cats;
                                                        System.out.println(scat);
                                                        jPanel6.removeAll();
                                                        jPanel6.repaint();
                                                        jPanel6.revalidate();
                                                        PreparedStatement ps = con.prepareStatement(scat);
                                                        ResultSet res = ps.executeQuery();
                                                        subCats = new ArrayList();
                                                        while (res.next()) {
                                                            String result = res.getString(1);
                                                            JCheckBox newChBox = new JCheckBox();
                                                            newChBox.setText(result);
                                                            subCats.add(newChBox);
                                                        }
                                                        jPanel6.setLayout(new GridLayout(0, 1, 0, 3));
                                                        for (JCheckBox ch : subCats) {
                                                            jPanel6.add(ch);
                                                            jPanel6.revalidate();
                                                            jPanel6.repaint(); 
                                                        }
                                                    } catch (SQLException ex) {
                                                        Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
                                                    }
                                                    //Getting Attributes Components
                                                    Component[] c = jPanel6.getComponents();
                                                    for (Component cs: c){
                                                        if (bs.getClass().equals(javax.swing.JCheckBox.class)) {
                                                            JCheckBox jcb = (JCheckBox) cs;
                                                            jcb.addActionListener(new ActionListener() {
                                                                @Override
                                                                public void actionPerformed(ActionEvent e) {
                                                                    if (jcb.isSelected()) {
                                                                        attr.add(jcb.getText());
                                                                        String ar = jComboBox1.getSelectedItem().toString(); 
                                                                        if ("AND".equals(ar)){
                                                                            ar = "Intersect";
                                                                        }else {
                                                                            ar = "Union";
                                                                        }
                                                                        String att = "SELECT DISTINCT BUSINESS_ID, City, State, Stars FROM BUSINESS WHERE BUSINESS_ID in (\n";
                                                                        String atid = "\t\t\tSELECT BID FROM BUSNATTR WHERE BID in (\n";
                                                                        String scat1 = "\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                                    + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                        String temp = "\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                                    + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                                        String temp2 = "\t\t\tSELECT BID FROM BUSNATTR WHERE BID in (\n";
                                                                        for (int i = 0; i < mainCate.size(); i++) {
                                                                            if (i == mainCate.size() - 1) {
                                                                                scat1 = scat1 + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                                temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";  
                                                                            } else {
                                                                                scat1 = scat1 + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                                temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                                            } 
                                                                        }
                                                                        for (int j = 0; j < subCate.size(); j++){
                                                                            if (j == subCate.size() - 1) {
                                                                                scat1 = scat1 + "\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "')\n"; 
                                                                            }else {
                                                                                scat1 = scat1 + "\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "'\n\t\t\t\t"+ ar + "\n"+ temp;   
                                                                            }
                                                                        }
                                                                        for (int h = 0; h < attr.size(); h++){
                                                                            if (h == attr.size() - 1) {
                                                                                atid = atid + scat1 + "\t\t\tAND ATTRJSON = '" + attr.get(h) + "')\n";
                                                                            }else {  
                                                                                atid = atid + scat1 + "\t\t\tAND ATTRJSON = '" + attr.get(h) + "'\n\t\t\t"+ ar + "\n" + temp2;  
                                                                            }                                                                            
                                                                        } 
                                                                        att = att + atid;
                                                                        System.out.println(att);
                                                                        Bus = "";
                                                                        Bus += att;
                                                                    }
                                                                    else if(!jcb.isSelected()){ 
                                                                        attr.remove(jcb.getText());
                                                                        if(attr.size()==0){
                                                                            System.out.println("\n");
                                                                        }else{
//                                                                            System.out.println("\n");
                                                                            String ar = jComboBox1.getSelectedItem().toString(); 
                                                                            if ("AND".equals(ar)){
                                                                                ar = "Intersect";
                                                                            }else {
                                                                                ar = "Union";
                                                                            }
                                                                            String att = "SELECT DISTINCT BUSINESS_ID, City, State, Stars FROM BUSINESS WHERE BUSINESS_ID in (\n";
                                                                            String atid = "\t\t\tSELECT BID FROM BUSNATTR WHERE BID in (\n";
                                                                            String scat1 = "\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                                        + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                            String temp = "\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                                        + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                                            String temp2 = "\t\t\tSELECT BID FROM BUSNATTR WHERE BID in (\n";
                                                                            for (int i = 0; i < mainCate.size(); i++) {
                                                                                if (i == mainCate.size() - 1) {
                                                                                    scat1 = scat1 + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                                    temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";  
                                                                                } else {
                                                                                    scat1 = scat1 + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                                    temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                                                } 
                                                                            }
                                                                            for (int j = 0; j < subCate.size(); j++){
                                                                                if (j == subCate.size() - 1) {
                                                                                    scat1 = scat1 + "\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "')\n"; 
                                                                                }else {
                                                                                    scat1 = scat1 + "\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "'\n\t\t\t\t"+ ar + "\n"+ temp;   
                                                                                }
                                                                            }
                                                                            for (int h = 0; h < attr.size(); h++){
                                                                                if (h == attr.size() - 1) {
                                                                                    atid = atid + scat1 + "\t\t\tAND ATTRJSON = '" + attr.get(h) + "')\n";
                                                                                }else {  
                                                                                    atid = atid + scat1 + "\t\t\tAND ATTRJSON = '" + attr.get(h) + "'\n\t\t\t"+ ar + "\n" + temp2;  
                                                                                }                                                                            
                                                                            }
                                                                            att = att + atid;
                                                                            System.out.println(att);
                                                                            Bus = "";
                                                                            Bus += att;
                                                                        }
                                                                    } 
                                                                }
                                                            });
                                                        }
                                                    }
                                                }
                                                else if(!jcb.isSelected()){
                                                    jPanel6.removeAll(); 
                                                    jPanel6.repaint();
                                                    jPanel6.revalidate();
                                                    subCate.remove(jcb.getText());
                                                    if(subCate.size()==0){
                                                        attr.clear();
                                                        jPanel6.removeAll();
                                                        jPanel6.repaint();
                                                        jPanel6.revalidate();
                                                    }else{
                                                        jPanel6.removeAll();
                                                        jPanel6.repaint();
                                                        jPanel6.revalidate();
                                                        try {
                                                            String ar = jComboBox1.getSelectedItem().toString();
                                                            if ("AND".equals(ar)){
                                                                ar = "Intersect";
                                                            }else {
                                                                ar = "Union";
                                                            }
                                                            String cats = "SELECT DISTINCT BUSINESS_ID, City, State, Stars FROM BUSINESS WHERE BUSINESS_ID in (\n";
                                                            String scatid = "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                        + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                            String temp2 = "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                        + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";


                                                            String scat = "SELECT DISTINCT ATTRJSON FROM BUSNATTR WHERE BID in (\n";
                                                            scat = scat + "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                        + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                            String temp = "\t\t\t\t\t\tSELECT DISTINCT BID FROM BUSINESSCATEGORY WHERE BID in (\n"
                                                                        + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                            for (int i = 0; i < mainCate.size(); i++) {
                                                                if (i == mainCate.size() - 1) {
                                                                    scat = scat + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                    temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                    scatid = scatid + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                    temp2 = temp2 + "BUSNCATGNAME = '" + mainCate.get(i) + "')\n";
                                                                } else {
                                                                    scat = scat + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                    temp = temp + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                                    scatid = scatid + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE "; 
                                                                    temp2 = temp2 + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t\t\t\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\t\t\t\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                                                } 
                                                            }
                                                            for (int j = 0; j < subCate.size(); j++){
                                                                if (j == subCate.size() - 1) {
                                                                    scat = scat + "\t\t\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "')\n";
                                                                    scatid = scatid + "\t\t\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "')\n";
                                                                }else {
                                                                    scatid = scatid + "\t\t\t\t\t\tAND BUSNSUBCAT = '" + subCate.get(j) + "'\n\t\t\t\t\t\t"+ ar + "\n"+ temp2; 
                                                                }
                                                            }
                                                            cats += scatid;
                                                            Bus ="";
                                                            Bus += cats;   
                                                            System.out.println(scat); 
                                                            jPanel6.removeAll();
                                                            jPanel6.repaint();
                                                            jPanel6.revalidate();
                                                            PreparedStatement ps = con.prepareStatement(scat);
                                                            ResultSet res = ps.executeQuery();
                                                            subCats = new ArrayList();
                                                            while (res.next()) {
                                                                String result = res.getString(1);
                                                                JCheckBox newChBox = new JCheckBox();
                                                                newChBox.setText(result);
                                                                subCats.add(newChBox);
                                                            }
                                                            jPanel5.setLayout(new GridLayout(0, 1, 0, 3));
                                                            for (JCheckBox ch : subCats) {
                                                                jPanel6.add(ch);
                                                                jPanel6.revalidate();
                                                                jPanel6.repaint();
                                                            }
                                                        } catch (SQLException ex) {
                                                            Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
                                                        }                            
                                                    }
                                                }
                                            }
                                        }); 
                                    }
                                }
                            } catch (SQLException ex) {
                                Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        else if(!jcb.isSelected()){
                            jPanel5.removeAll();
                            jPanel5.repaint();
                            jPanel5.revalidate();
                            jPanel6.removeAll();
                            jPanel6.repaint();
                            jPanel6.revalidate();
                            mainCate.remove(jcb.getText());
                            if(mainCate.size()==0){
                                Bus = "";
                                Bus = "SELECT BUSINESS_ID, City, State, Stars FROM BUSINESS";
                                mainCate.clear();
                                subCate.clear();
                                attr.clear();
                                jPanel5.removeAll();
                                jPanel5.repaint();
                                jPanel5.revalidate();
                                jPanel6.removeAll();
                                jPanel6.repaint();
                                jPanel6.revalidate();
                            }else{
                                jPanel5.removeAll();
                                jPanel5.repaint();
                                jPanel5.revalidate();
                                jPanel6.removeAll();
                                jPanel6.repaint();
                                jPanel6.revalidate();
                                try {
                                    Bus = "";
                                    String ar = jComboBox1.getSelectedItem().toString();
                                    if ("AND".equals(ar)){
                                        ar = "Intersect";
                                    }else {
                                        ar = "Union";
                                    }
                                    String cats = "SELECT DISTINCT BUSINESS_ID, City, State, Stars FROM BUSINESS WHERE BUSINESS_ID in (\n";
                                    String cat = "";
                                    String catid = "\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                    cat = cat + "SELECT DISTINCT BUSNSUBCAT FROM BUSINESSCATEGORY WHERE ";
                                    for (int i = 0; i < mainCate.size(); i++) {
                                        if (i == mainCate.size() - 1) {
                                            cat = cat + "BUSNCATGNAME = '" + mainCate.get(i) + "'";
                                            catid = catid + "BUSNCATGNAME = '" + mainCate.get(i) + "')"; 
                                        } else {
                                            cat = cat + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n"+ ar + "\n" + "SELECT DISTINCT BUSNSUBCAT FROM BUSINESSCATEGORY WHERE ";
                                            catid = catid + "BUSNCATGNAME = '" + mainCate.get(i) + "'\n\t\t\t\t\t"+ ar + "\n" + "\t\t\t\t\tSELECT BID FROM BUSINESSCATEGORY WHERE ";
                                        }
                                    }
                                    cats = cats + catid; 
                                    Bus = "";
                                    Bus += cats;
                                    System.out.println(cat);
                                    jPanel5.removeAll();
                                    PreparedStatement ps = con.prepareStatement(cat);
                                    ResultSet res = ps.executeQuery();
                                    subCats = new ArrayList();
                                    while (res.next()) {
                                        String result = res.getString(1) + "\n";
                                        JCheckBox newChBox = new JCheckBox();
                                        newChBox.setText(result);
                                        subCats.add(newChBox);
                                    }
                                    jPanel5.setLayout(new GridLayout(0, 1, 10, 10));
                                    for (JCheckBox ch : subCats) {
                                        jPanel5.add(ch);
                                        jPanel5.revalidate();
                                        jPanel5.repaint();
                                    }
                                } catch (SQLException ex) {
                                    Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
                                }                            
                            }
                        }
                    }
                });
            }
        }
    }

    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hw3().setVisible(true);
            }
        });
    }
    
    public ArrayList<JCheckBox> subCats;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox17;
    private javax.swing.JComboBox<String> jComboBox18;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker3;
    // End of variables declaration//GEN-END:variables
}
